#!/usr/bin/env crystal

require "string_scanner"

# [1 2 3] [dup *] map
# 1 Int32 : 2 Int32 : + (Int32 -> Int32 -> Int32) :

def skip_ws(ss)
  ss.skip(/\s+/)
end

def read_int(ss)
  ss.scan(/\d+/)
end

def read_id(ss)
  ss.scan(/[^\s\[\]\(\)\{\}]+/)
end

def read(s : String)
  tokens = [] of String
  ss = StringScanner.new(s)

  until ss.eos?
    skip_ws(ss)
    case
    when token = read_int(ss) || read_id(ss)
      tokens << token
    else
      raise "Reader error: Unreadable input: '#{ss.rest}'"
    end
    skip_ws(ss)
  end

  tokens
end

p read(ARGV.first)
