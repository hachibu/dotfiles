#!/usr/bin/env ruby

require 'colorize'
require 'json'
require 'jsonl'
require 'highline'
require 'semantic'

package_json = JSON.parse(File.read('package.json'))
yarn_outdated = JSONL.parse(`yarn outdated --json`)

exit(1) if yarn_outdated.count < 2

packages_updated = 0
outdated_packages = yarn_outdated.dig(1, 'data', 'body')

outdated_packages.each do |package, current, _, latest, package_type|
  old_semver = Semantic::Version.new(current)
  new_semver = Semantic::Version.new(latest)
  semver_type =
    if new_semver.major > old_semver.major
      :major
    elsif new_semver.minor > old_semver.minor
      :minor
    elsif new_semver.patch > old_semver.patch
      :patch
    end
  semver_type_color = {
    major: :red,
    minor: :yellow,
    patch: :green
   }.fetch(semver_type)

  answer = HighLine.agree(
    "#{package.colorize(semver_type_color)} #{current} > #{latest} ? "
  )
  next unless answer

  package_json[package_type][package] = latest
  packages_updated += 1
end

if packages_updated > 0
  File.write('package.json', JSON.pretty_generate(package_json) + "\n")
end
