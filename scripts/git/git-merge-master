#!/usr/bin/env ruby

require_relative 'lib/utils'

def update_master
  git(
    'stash',
    'checkout master',
    'pull --rebase'
  )
end

def update_branch(branch)
  git(
    "checkout #{branch}",
    'rebase master',
    "push origin #{branch}:#{branch} --force-with-lease"
  )
end

def merge_branch_into_master(branch)
  git(
    'checkout master',
    "merge --ff-only #{branch}"
  )
end

def push_master(dry_run: false)
  if dry_run
    git('push origin master:master --dry-run')
  else
    git('push origin master:master')
  end
end

def delete_branch(branch)
  git(
    "push origin :#{branch}",
    "branch -D #{branch}"
  )
end

error('Not a git repository.') unless git_repo?

branch = git_branch

if branch == 'master'
  error('Cannot merge master into master.')
end

update_master
update_branch(branch)
merge_branch_into_master(branch)
push_master
delete_branch(branch)
