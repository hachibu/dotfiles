#!/usr/bin/env crystal

require "colorize"
require "file_utils"
require "yaml"

class Service
  YAML.mapping(name: String, command: String, directory: String?)
end

if ARGV.empty?
  puts("Config argument missing.".colorize.red)
  exit(1)
end

config = ARGV.first
services = Array(Service).from_yaml(File.read(config))
services_dir = File.basename(config, ".yaml")

FileUtils.rm_rf(services_dir)
Dir.mkdir_p(services_dir)

services.each do |service|
  service_dir = File.join(services_dir, service.name)
  service_run = File.join(service_dir, "run")

  Dir.mkdir_p(service_dir)
  File.open(service_run, "w") do |f|
    f.puts "#!/usr/bin/env bash"
    f.puts
    if service.directory
      f.puts %(cd "#{service.directory}" || exit)
    end
    service.command.split("\n").each do |line|
      f.puts line unless line.empty?
    end
  end
  File.chmod(service_run, 0o755)
end

puts %(Run "svscan #{services_dir}" to start services.).colorize.yellow
